# Generated by Django 3.2.16 on 2022-12-13 21:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='название')),
            ],
            options={
                'verbose_name': 'город',
                'verbose_name_plural': 'города',
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='название')),
            ],
            options={
                'verbose_name': 'специализация',
                'verbose_name_plural': 'специализации',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='название')),
            ],
            options={
                'verbose_name': 'тэг',
                'verbose_name_plural': 'тэги',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=300, verbose_name='вопрос')),
                ('variant_a', models.CharField(max_length=300, verbose_name='вопрос')),
                ('variant_b', models.CharField(max_length=300, verbose_name='вопрос')),
            ],
            options={
                'verbose_name': 'тест',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='название')),
                ('description', models.CharField(max_length=300, verbose_name='описание')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.city')),
            ],
            options={
                'verbose_name': 'университет',
                'verbose_name_plural': 'университеты',
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.specialization')),
            ],
            options={
                'verbose_name': 'результаты теста',
                'verbose_name_plural': 'результаты тестов',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='название')),
                ('description', models.CharField(max_length=300, verbose_name='описание')),
                ('specialization', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.specialization')),
                ('tags', models.ManyToManyField(to='core.Tag')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.university')),
            ],
            options={
                'verbose_name': 'факультет',
                'verbose_name_plural': 'факультеты',
            },
        ),
    ]
